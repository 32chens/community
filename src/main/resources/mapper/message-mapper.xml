<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chenlf.community.mapper.MessageMapper">

    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>
    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>

<!--    //查询当前用户的绘画列表，每个回话返回最新的一条-->
<!--    List<Message> selectConversations(int userId, int offset, int limit);-->
        <select id="selectConversations" resultType="Message">
            select <include refid="selectFields"></include>
            from message
            where id in
            (
                select max(id) from message
                where status != 2
                and from_id != 1
                and (from_id = #{userId} or to_id = #{userId})
                group by conversation_id
            )
            order by id desc
            limit #{offset}, #{limit}
        </select>


<!--    //查询当前用户的绘画数量-->
<!--    int selectconversationCount(int userId);-->
    <select id="selectconversationCount" resultType="int">
        select count(m.maxid) from
        (
                select max(id) as maxid from message
                where status != 2
                and from_id != 1
                and (from_id = #{userId} or to_id = #{userId})
                group by conversation_id
            ) as m
    </select>

<!--    //查询某个会话所包含的私信列表-->
<!--    List<Message> selectLetters(String conversationId, int offset, int limit);-->
    <select id="selectLetters" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
        order by id desc
        limit #{offset}, #{limit}
    </select>

<!--    //查询某个会话所包含的私信数量-->
<!--    int selectLetterCount(String conversatioinId);-->
    <select id="selectLetterCount" resultType="int">
        select count(id) from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
    </select>

<!--    //查询未读私信的数量-->
<!--    int selectLetterUnreadCount(int userId, String conversationId);-->
    <select id="selectLetterUnreadCount" resultType="int">
        select count(id) from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId != null">
            and conversation_id = #{conversationId}
        </if>
    </select>

<!--    //新增消息-->
<!--    int insertMessage(Message message);-->
    <insert id="insertMessage" parameterType="Message" keyProperty="id">
        insert into message (<include refid="insertFields"></include>)
        values(#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>

<!--    //修改消息状态-->
<!--    int updateStatus(List<Integer> ids, int status);-->
    <update id="updateStatus" >
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

<!--    //查询某个主题下最新的通知-->
<!--    Message selectLastNotice(int userId, String topic);-->
    <select id="selectLastNotice" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where id in
        (
        select max(id) from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
        )

    </select>

<!--    //查询某个主题所含的数量-->
<!--    int selectNoticeCount(int userId,String topic);-->
    <select id="selectNoticeCount" resultType="int">
        select count(id)
        from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}


    </select>
<!--    //查询未读的通知数量-->
<!--    int selectUnreadNoticeCount(int userId,String topic);-->
    <select id="selectUnreadNoticeCount" resultType="int">
        select count(id)
        from message
        where status = 0
        and from_id = 1
        and to_id = #{userId}

        <if test="topic != null">
            and conversation_id = #{topic}
        </if>

    </select>

<!--    //某个主题的通知列表-->
<!--    List<Message> selectNotices(int userId, String topic, int offset, int limit);-->
    <select id="selectNotices" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
        order by create_time desc
        limit #{offset}, #{limit}
    </select>
</mapper>